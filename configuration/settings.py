"""
Django settings for trueidvault project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
import sys
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()  # Will load .env file from the project root by default


# Build paths inside the project like this: BASE_DIR / 'subdir'.
configuration_dir = os.path.dirname(os.path.abspath(__file__))
_base = os.path.dirname(configuration_dir)
sys.path.append(os.path.join(_base, "trueidvault"))
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!

ALLOWED_HOSTS = []
SECRET_KEY = os.environ.get("SECRET_KEY", default="your-secret-key-here")
ALLOWED_HOSTS = [
    s.strip() for s in os.environ.get("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",")
]
DEBUG = os.environ.get("DEBUG", "False").lower() in ("true", "1", "yes")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",
    # APPs
    "ekyc",
    "accounts",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "configuration.urls"

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "accounts.authentication.APIKeyAuthentication",
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        "rest_framework.throttling.AnonRateThrottle",
        "accounts.throttling.FreeAPIKeyThrottle",
        "accounts.throttling.PremiumAPIKeyThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {
        "anon": '1/minute',          # Anonymous users: 10 requests/day
        "free_api_key": '5/minute',  # Free API keys: 50 requests/day
        "premium_api_key": '100/minute',  # Premium API keys: 1000 requests/day
    },
    "DEFAULT_THROTTLE_RESPONSE_DETAIL": "Too many requests. Try again later.",

}

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "configuration.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("DB", default="db"),
        "USER": os.environ.get("DB_USER", default="user"),
        "PASSWORD": os.environ.get("DB_PASSWORD", default="password"),
        "HOST": os.environ.get("DB_HOST", default="127.0.0.1"),
        "PORT": os.environ.get("DB_PORT", default="5432"),
        "ATOMIC_REQUESTS": os.environ.get(
            "ATOMIC_REQUESTS", default=True
        ),  # Enable atomic requests
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": "celery_task.log",
        },
    },
    "root": {
        "handlers": ["file"],
        "level": "DEBUG",
    },
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.environ.get(
            "REDIS_URL", default="redis://:123456789@127.0.0.1:6379/1"
        ),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}


CELERY_BROKER_URL = os.environ.get(
    "CELERY_BROKER_URL", default="redis://:123456789@127.0.0.1:6379/1"
)
CELERY_RESULT_BACKEND = os.environ.get(
    "CELERY_RESULT_BACKEND", default="redis://:123456789@127.0.0.1:6379/1"
)
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
